/*! \page page_outputs Code outputs
    
    \tableofcontents
    \latexonly
        \textit{\scriptsize Footnotes are situated at the end of the chapter}
    \endlatexonly
    
    This page describes the various outputs that PB3D and POST can produce.

    On the one hand, there are various text output files, which are discussed in section \ref output_files.

    Furthermore, a multitude of plots can be produced. This is the topic of section \ref output_plots.
    
    \section output_files Output Files
    
    Some of these files are opened in open_output(), but others are opened afterwards.
    
    \subsection output_file_log Log file
    Both PB3D and POST produce a log file, in addition to what is produced on the screen.

    These log files are called <tt>PB3D_out.txt</tt> and <tt>POST_out.txt</tt> and they contain the same information as the output on the screen, but without the special formatting provided by the foul library (see \ref installation_introduction).
    
    \subsection output_file_shell Shell commands file
    Some output routines make use of use_execute_command_line() in order to execute shell commands.
    This can be, for example, the creation of a plot by calling GnuPlot, among other things.

    However, this often does not work well by default (see \ref fni30 "30" in \ref page_inputs).
    In PB3D and POST, therefore, by default, these commands are not executed, but written to an output file.
    After execution of PB3D and POST has finished, this file can be made executed.
    
    This behavior can be changed using the <tt>--do_execute_command_line</tt> flag (see \ref page_inputs).
    
    
    \subsection output_file_HDF5 HDF5 output file
    PB3D writes variables to an HDF5 output file during execution, as shown in table \ref output_file_HDF5_tab "1".
    Note that there is a difference between the equilibrium styles because of the way how the equilibrium codes provide output:
        - VMEC (<tt>eq_style = 1</tt>) produces double Fourier series:
            - This can be evaluated at arbitrary angular points.
            - In PB3D, the equilibrium and perturbation variables are therefore already calculated on the field-aligned grid.
            - Parallel integration can then be done directly.
        - HELENA (<tt>eq_style = 2</tt>) produces 2-D tables for the poloidal cross-section.
            - This needs to be interpolated along the magnetic field lines before parallel integration.
            - The equilibrium and perturbation variables are calculated first in the HELENA grid.
    
    <table>
    <caption id="output_file_HDF5_tab">Table 1. HDF5 output file</caption>
    <tr>
        <th width="24%"> variable type </th><th width="38%"> VMEC (<tt>eq_style = 1</tt>) </th><th width="38%"> HELENA (<tt>eq_style = 2</tt>) </th>
    </tr>
    <tr>
        <td rowspan="1"> inputs </td><td colspan="2"> in preliminary phase  </td>
    </tr>
    <tr>
        <td rowspan="10"> grids of grid_vars.grid_type </td><td colspan="2" bgcolor=LightGray align="center"> <b>equilibrium</b> </td>
    </tr>
    <tr>
            <td colspan="2">field-aligned-grid at every Richardson level</td>
    </tr>
    <tr>
            <td></td> <td>also output HELENA grid at first Richardson level</td>
    </tr>
    <tr>
            <td></td> <td>used later for interpolation to field-aligned grid</td>
    </tr>
    <tr>
            <td colspan="2" bgcolor=LightGray align="center"> <b>perturbation</b> </td>
    </tr>
    <tr>
            <td colspan="2">field-aligned-grid at every Richardson level</td>
    </tr>
    <tr>
            <td></td> <td>also output HELENA grid at first Richardson level</td>
    </tr>
    <tr>
            <td></td> <td>used later for interpolation to field-aligned grid</td>
    </tr>
    <tr>
            <td colspan="2" bgcolor=LightGray align="center"> <b>solution</b> </td>
    </tr>
    <tr>
            <td colspan="2">only at first Richardson level</td>
    </tr>
    <tr>
        <td rowspan="1"> flux equilibria of eq_vars.eq_1_type </td><td colspan="2"> only at first Richardson level </td>
    </tr>
    <tr>
        <td rowspan="3"> metric equilibria of eq_vars.eq_2_type </td><td colspan="2"> only at first Richardson level </td>
    </tr>
    <tr>
            <td></td> <td>also output HELENA grid at first Richardson level</td>
    </tr>
    <tr>
            <td></td> <td>used later for interpolation to field-aligned grid</td>
    </tr>
    <tr>
        <td rowspan="1"> vacuums of vac_vars.vac_type </td><td> at every Richardson level </td> <td> only at first Richardson level </td>
    </tr>
    <tr>
        <td rowspan="1"> solutions of sol_vars.sol_type </td><td colspan="2"> at every Richardson level </td>
    </tr>
    </table>
    
    This data is used for Richardson restart (see variable \c rich_restart_lvl in \ref page_inputs).
    
    In the post-processing phase, POST reads this data as well.
    

    \subsection output_file_EV Eigenvalue summary file
    In each Richardson extrapolation level, after the solution of the eigenvalue system of equations, eigenvalues are stored in PB3D.
        - For SLEPC, the results are saved in the procedure store_results():
            - If normalization is used, the normalization time scale is also stored.
            - If an unphysical complex eigenvalue is detected, this is indicated.
            See \c option retain_all_sol in \ref inputs_PB3D_file.
    
    
    \subsection output_file_E_rec Energy reconstruction file
    If energy reconstruction is performed by POST (see \c plot_E_rec in \ref page_inputs), the individual terms that make up the perturbed potential energy as well as the kinetic energy of the perturbation are calculated and plot. (\ref fno3 "3")
    Furthermore, the integration of these quantities over the whole volume, is returned in an output file.
    
    In table \ref e_rec_tab "2", an overview is given of the different terms.
    Here, \f$\rho\f$ is the density, \f$\sigma = \frac{\vec{B}\cdot\vec{J}}{B^2}\f$ is the parallel current and \f$\kappa = \frac{\vec{B}}{B} \cdot \nabla \frac{\vec{B}}{B}\f$ is the magnetic curvature. See calc_e().

    <table>
        <caption id="e_rec_tab">Table 2. energy reconstruction</caption>
        <tr> <th>potential energy \f$E_\text{pot}\f$ </th><th> kinetic energy \f$E_\text{kin}\f$ </th></tr>
        <tr>
            <td> <ul>
                <li>normal line bending term \f$\frac{1}{\left|\nabla\psi\right|^2 }\left(\frac{\nabla \psi}{\left|\nabla \psi\right|^2}\cdot \vec{Q}\right)^2\f$ </li>
                <li>gedesic line bending term \f$\mathcal{J}^2\frac{\left|\nabla \psi\right|^2}{B^2} \left( \frac{\nabla \psi \times \vec{B}}{B^2}\cdot \vec{Q} \right)^2\f$ </li>
                <li>normal ballooning term \f$-2 p' \left(\nabla \psi \cdot \vec{\xi}\right)^2 \left(\nabla \psi \cdot \vec{\kappa}\right)\f$ </li>
                <li>geodesic ballooning term \f$-2 p' \left( \nabla \psi \cdot \vec{\xi} \right) \left( \frac{\nabla \psi \times \vec{B}}{\left|\nabla \psi \right|^2} \cdot \vec{\xi}\right)^* \left(\frac{\nabla \psi \times \vec{B}}{\left|\nabla \psi \right|^2} \cdot \vec{\kappa}\right)\f$ </li>
                <li>normal kink term \f$-2 \sigma \left(\nabla \psi \cdot \vec{\xi}\right)^* \left(\frac{\nabla \psi \times \vec{B}}{B^2}\cdot \vec{Q} \right)\f$ </li>
                <li>geodesic kink term \f$ 2 \sigma \left(\frac{\nabla \psi \times \vec{B}}{B^2} \cdot \vec{\xi}\right)^* \left(\nabla \psi\cdot \vec{Q} \right)\f$ </li>
            </ul> </td>
            <td> <ul>
                <li>normal kinetic term \f$\frac{1}{\left|\nabla\psi\right|^2 }\left(\frac{\nabla \psi}{\left|\nabla \psi\right|^2}\cdot \vec{\xi}\right)^2\f$ </li>
                <li>gedesic kinetic term \f$\mathcal{J}^2\frac{\left|\nabla \psi\right|^2}{B^2} \left( \frac{\nabla \psi \times \vec{B}}{B^2}\cdot \vec{\xi} \right)^2\f$ </li>
            </ul> </td>
        </tr>
    </table>

    
    \subsection output_file_mem Memory usage file
    The memory usage of PB3D and POST can be monitored using the optional input argument <tt>--mem_info</tt> (see \ref inputs_PB3D_cmd).
    
    This is a rather crude implementation and more advance profiling methods should be used, such as <a href="http://www.scalasca.org/">Scalasca</a> on top of <a href="http://www.vi-hps.org/projects/score-p/">Score-P</a>.

    \ldebug
    
    
    \section output_plots Output Plots
    A multitude of plots can be produced by PB3D and POST.

    POST can produce all the plots that PB3D can, and some more.

    The plots themselves fall in two categories:
        - Plots using an external program.
            - Produced by output_ops.print_ex_2d() or output_ops.print_ex_3d() combined with draw_ex().
            - A list of external programs is given in draw_ex().
            - These plots require a shell command to be run, which is disabled by default and the commands are stored in a \ref output_file_shell.
            - The produced plots can be 2-D or 3-D, and they can be interactive or not, depending on the \c ex_plot_style (see \ref page_inputs).
        - Data files that can be used to produce plots with visualization software:
            - The software used here was <a href="https://visit.llnl.gov/">VisIt</a>, based on personal preference, but <a href="https://www.paraview.org/">ParaView</a> or other VTK-based solutions should work equally well.
            - Every plot creates two output files: one heavy-data HDF5 file and one <a href="www.xdmf.org/">XDMF</a> file that contains specifics about the HDF5 file.
            - This is necessary, as HDF5 itself is too general a format for general visualization tools to interpret easily.
            - The XDMF file that accompanies each HDF5 file basically contains information about the saved variables, such as whether they are vectors or scalars, and on which grid type they are defined.
            - This is the file that should be opened by the visualzation software.
            - The dimensions of these plots can be 2-D or 3-D, depending on \c eq_style. See \ref fni19 "19" and \ref fni20 "20" in \ref page_inputs.

    An overview of possible plots is now given in table \ref output_plots_tab "3".
    The name of the respective input parameter is provided as well. See \ref page_inputs.
    
    <table>
    <caption id="output_plots_tab">Table 3. possible plots</caption>
    <tr>
        <th width="20%"> plot type </th><th width="40%"> external plot </th><th width="40%"> HDF5 plot </th>
    </tr>
    <tr>
        <td rowspan="1"> flux quantities (<tt>plot_flux_q</tt>) </td> <td> <ul><li>pressure \f$p\f$</li><li>poloidal flux \f$\Psi_\text{pol}\f$</li><li>toroidal flux \f$\Psi_\text{tor}\f$</li></ul> </td>
        <td><ul><li>safety factor \f$q\f$</li><li>rotational transform \f$\iota\f$</li><li>pressure \f$p\f$</li><li>poloidal flux \f$\Psi_\text{pol}\f$</li><li>toroidal flux \f$\Psi_\text{tor}\f$</li></ul> </td>
    </tr>
    <tr>
        <td rowspan="1"> resonance (<tt>plot_resonance</tt>) </td> <td> safety factor \f$q\f$ (poloidal flux) or rotational transform \f$\iota\f$ (toroidal flux) with the indication of the resonant flux surfaces (\ref fno1 "1") </td>
        <td>surfaces of resonant values for safety factor \f$q\f$ (poloidal flux) or rotational transform \f$\iota\f$ (toroidal flux) (\ref fno1 "1")  </td>
    </tr>
    <tr>
        <td rowspan="1"> magnetic grid (<tt>plot_magn_grid</tt>) </td> <td bgcolor=LightGray ></td> <td>magnetic grid lines in the magnetic flux surfaces, as a time collection </td>
    </tr>
    <tr>
        <td rowspan="1"> magnetic field \f$\vec{B}\f$ (<tt>plot_B</tt>) </td> <td bgcolor=LightGray ></td> <td>co- and contravariant components of magnetic field, as well as magnitude and vector plot </td>
    </tr>
    <tr>
        <td rowspan="1"> current density \f$\vec{J}\f$ (<tt>plot_J</tt>) </td> <td bgcolor=LightGray ></td> <td>co- and contravariant components of current density, as well as magnitude and vector plot </td>
    </tr>
    <tr>
        <td rowspan="1"> magnetic curvature \f$\vec{\kappa}\f$ (<tt>plot_kappa</tt>) </td> <td bgcolor=LightGray ></td> <td>co- and contravariant components of magnetic curvature, as well as magnitude and vector plot </td>
    </tr>
    <tr>
        <td rowspan="1"> solution normal mode \f$\vec{\xi}\f$ (<tt>plot_sol_xi</tt>) </td> <td bgcolor=LightGray ></td> <td> real and imaginary part and phase of perturbation of position, as well as vector plot </td>
    </tr>
    <tr>
        <td rowspan="1"> perturbated magnetic field due to solution normal mode \f$\vec{Q}\f$ (<tt>plot_sol_Q</tt>) </td> <td bgcolor=LightGray ></td> <td> real and imaginary part and phase of perturbation of magnetic field, as well as vector plot </td>
    </tr>
    <tr>
        <td rowspan="1"> energy reconstruction (<tt>plot_E_rec</tt>)  </td> <td bgcolor=LightGray ></td> <td> different components of energy reconstruction, integrated as well as profiles (\ref fno2 "2")
    </tr>
    </table>


    \note
        -# \anchor fno1 See \c use_pol_flux_F in \ref page_inputs.
        -# \anchor fno2 The integrated energy reconstruction terms are also output to a file. See \ref output_file_E_rec.
        -# \anchor fno3 Energy reconstruction only works well when <tt> POST_style = 2 </tt> is used, i.e. when the same grid is used as for PB3D.
*/
