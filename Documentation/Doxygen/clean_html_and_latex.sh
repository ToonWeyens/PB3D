#!/usr/bin/env bash
echo 'STARTING'
cd /home/toon/Documents/PB3D.github.io/Doxygen
pwd
prog_names[0]='PB3D'
prog_names[1]='POST'

echo ''
echo 'FIXING HTML'
cd html

echo 'removing double "this documentation was created by" from index'
doc_line=$(grep -n -m 1 'this documentation was created with' index.html | cut -f1 -d":")
sed -i -e ${doc_line}'d' index.html

for prog_name in ${prog_names[@]}; do
    echo "removing file reference from ${prog_name}"
    sed -i 's/.f90 File/ Program/g' ${prog_name}_8f90.html
done

echo ''
echo 'FIXING LATEX'
cd ../
cd latex

echo 'removing all the "references to the files in types and interfaces'
search_strings[0]='The documentation for this type was generated from the following file'
search_strings[1]='The documentation for this interface was generated from the following file'
IFS=$'\n'
for search_string in ${search_strings[@]}; do
    echo "    removing everything that contains"
    echo "        '${search_string}'"
    files=($(grep -l "${search_string}"  *.tex))
    for file in ${files[@]}; do
        line=$(grep -n "${search_string}" ${file} | cut -f1 -d":")
        sed -i $((line-1))q ${file}
    done
done

echo 'Moving PB3D and POST documentation to before Modules'
echo "    Adding chapter title"
mod_doc_line=$(grep -n "Module Documentation" refman.tex | cut -f1 -d":")
sed -i ${mod_doc_line}'i\\chapter{Programs}\' refman.tex
for prog_name in ${prog_names[@]}; do
    chap_line=$(grep -n '\chapter{Programs}' refman.tex | cut -f1 -d":")
    prog_line=$(grep -n '\input{'${prog_name}'_8f90}' refman.tex | cut -f1 -d":")
    echo "    move line ${prog_line} to $((chap_line))"
    ex -s -c ${prog_line}m${chap_line} -c w! -c q refman.tex
done


echo 'removing File documentation'
files_line=$(grep -n '\\chapter{File Documentation}'  refman.tex | cut -f1 -d":")
example_line=$(grep -n '\chapter{Example Documentation}'   refman.tex | cut -f1 -d":")
if ((files_line+1 < example_line-1))
then
    echo "    remove line numbers between $((files_line)) and $((example_line-1))"
    sed -i.bak -e "$((files_line)),$((example_line-1))d" refman.tex
else
    echo "    not found"
fi

echo 'renaming chapters'
sed -i 's/Module Documentation/Modules/g' refman.tex
sed -i 's/Data Type Documentation/Interfaces and Types/g' refman.tex
sed -i 's/Example Documentation/Examples/g' refman.tex

echo 'changing titlepage'
sed -i 's/linkcolor=blue/linkcolor=stylecolor/g' refman.tex
sed -i 's/citecolor=blue/citecolor=stylecolor/g' refman.tex
version_line=$(grep -n '\\Large P\\+B3D \\\\\[1ex\]'  refman.tex | cut -f1 -d":")
sed -i 's/\\Large P\\+B3D \\\\\[1ex\]//g' refman.tex
sed -i ${version_line}'i\\vspace*{1cm}\' refman.tex
sed -i ${version_line}'i\{\color{stylecolor} \TitleFont\fontsize{72}{80} \selectfont P\+B3D \\}\' refman.tex
sed -i '/Generated by Doxygen/d' refman.tex

echo 'fixing pdf hypersetup'
hyper_line=$(grep -n -m 1 '\\hypersetup'  refman.tex | cut -f1 -d":")
sed -i $((hyper_line+1))'i\pdfduplex=DuplexFlipLongEdge,%\' refman.tex
sed -i $((hyper_line+1))'i\pdfcreator={Toon Weyens},%\' refman.tex
sed -i $((hyper_line+1))'i\pdfproducer={Toon Weyens},%\' refman.tex
sed -i $((hyper_line+1))'i\pdfauthor={Toon Weyens},%\' refman.tex
sed -i $((hyper_line+1))'i\pdfkeywords={PB3D, Magnetohydrodynamics, MHD, nuclear, fusion, plasma, stability, ideal, linear, peeling-ballooning, peeling, ballooning, 3D, 3-D, three-dimensional},%\' refman.tex
sed -i $((hyper_line+1))'i\baseurl=https://pb3d.github.io/,%\' refman.tex
sed -i $((hyper_line+1))'i\pdftitle={Peeling-Ballooning in 3-D},%\' refman.tex
sed -i $((hyper_line+1))'i\pdfsubject={code manual},%\' refman.tex

for prog_name in ${prog_names[@]}; do
    echo "removing f90 from ${prog_name}"
    sed -i 's/\.\\+f90//g' ${prog_name}_8f90.tex
    sed -i '1s/File Reference/Program Rerefence/' ${prog_name}_8f90.tex
    start_cut=$(grep -n "subsection\*"  ${prog_name}_8f90.tex | cut -f1 -d":")
    end_cut=$(grep -n "subsubsection"  ${prog_name}_8f90.tex | cut -f1 -d":")
    if ((start_cut < end_cut+1))
    then
        echo "    remove line numbers between $((start_cut)) and $((end_cut+1))"
        sed -i.bak -e "$((start_cut)),$((end_cut+1))d" ${prog_name}_8f90.tex
    else
        echo "    not found"
    fi
    #sed -i 's/Here is the call graph for this function/\nHere is the call graph for this program/' ${prog_name}_8f90.tex
done

echo 'Adding appendix'
chap_line=$(grep -n '\chapter{Programs}' refman.tex | cut -f1 -d":")
sed -i $((chap_line))'i\\begin{appendices}\' refman.tex
sed -i $((chap_line+1))'i\\appendixpage\' refman.tex
sed -i $((chap_line+2))'i\\noappendicestocpagenum\' refman.tex
sed -i $((chap_line+3))'i\\addappheadtotoc\' refman.tex
app_line=$(grep -n '%--- End generated contents ---'  refman.tex | cut -f1 -d":")
sed -i ${app_line}'i\\end{appendices}\' refman.tex


echo 'removing font stuff'
sed -i -e "$(grep -n 'fontenc' refman.tex | cut -f1 -d":")d" refman.tex
sed -i -e "$(grep -n 'inputenc' refman.tex | cut -f1 -d":")d" refman.tex
start_cut=$(grep -n '% Font selection' refman.tex | cut -f1 -d":")
end_cut=$(grep -n '\\renewcommand{\\DoxyLabelFont}' refman.tex | cut -f1 -d":")
if ((start_cut < end_cut+1))
then
    echo "    remove line numbers between $((start_cut+1)) and $((end_cut-1))"
    sed -i.bak -e "$((start_cut+1)),$((end_cut-1))d" refman.tex
else
    echo "    not found"
fi

echo ''
echo 'FINALIZE'
